[{"E:\\foodie-master\\foodie-master\\foodie-master\\src\\index.js":"1","E:\\foodie-master\\foodie-master\\foodie-master\\src\\App.js":"2","E:\\foodie-master\\foodie-master\\foodie-master\\src\\reportWebVitals.js":"3","E:\\foodie-master\\foodie-master\\foodie-master\\src\\screens\\Login.js":"4","E:\\foodie-master\\foodie-master\\foodie-master\\src\\screens\\MyOrder.js":"5","E:\\foodie-master\\foodie-master\\foodie-master\\src\\components\\ContextReducer.js":"6","E:\\foodie-master\\foodie-master\\foodie-master\\src\\screens\\Signup.js":"7","E:\\foodie-master\\foodie-master\\foodie-master\\src\\screens\\Home.js":"8","E:\\foodie-master\\foodie-master\\foodie-master\\src\\components\\Navbar.js":"9","E:\\foodie-master\\foodie-master\\foodie-master\\src\\components\\Footer.js":"10","E:\\foodie-master\\foodie-master\\foodie-master\\src\\components\\Card.js":"11","E:\\foodie-master\\foodie-master\\foodie-master\\src\\Model.js":"12","E:\\foodie-master\\foodie-master\\foodie-master\\src\\screens\\Cart.js":"13"},{"size":535,"mtime":1694618036000,"results":"14","hashOfConfig":"15"},{"size":969,"mtime":1694786099648,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1694618036000,"results":"17","hashOfConfig":"15"},{"size":3294,"mtime":1694786112104,"results":"18","hashOfConfig":"15"},{"size":4623,"mtime":1694629196000,"results":"19","hashOfConfig":"15"},{"size":1607,"mtime":1694618036000,"results":"20","hashOfConfig":"15"},{"size":5298,"mtime":1694618036000,"results":"21","hashOfConfig":"15"},{"size":5137,"mtime":1694628602000,"results":"22","hashOfConfig":"15"},{"size":3228,"mtime":1694786270958,"results":"23","hashOfConfig":"15"},{"size":1442,"mtime":1694618036000,"results":"24","hashOfConfig":"15"},{"size":3599,"mtime":1694618036000,"results":"25","hashOfConfig":"15"},{"size":873,"mtime":1694618036000,"results":"26","hashOfConfig":"15"},{"size":3124,"mtime":1694618036000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15vqq43",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\foodie-master\\foodie-master\\foodie-master\\src\\index.js",[],[],"E:\\foodie-master\\foodie-master\\foodie-master\\src\\App.js",[],[],"E:\\foodie-master\\foodie-master\\foodie-master\\src\\reportWebVitals.js",[],[],"E:\\foodie-master\\foodie-master\\foodie-master\\src\\screens\\Login.js",[],[],"E:\\foodie-master\\foodie-master\\foodie-master\\src\\screens\\MyOrder.js",[],[],"E:\\foodie-master\\foodie-master\\foodie-master\\src\\components\\ContextReducer.js",[],[],"E:\\foodie-master\\foodie-master\\foodie-master\\src\\screens\\Signup.js",["68"],[],"import React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nexport default function Signup() {\n  const [credentials, setCredentials] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    geolocation: \"\",\n  });\n  //   let [address, setAddress] = useState(\"\");\n  //   let navigate = useNavigate();\n\n  //   const handleClick = async (e) => {\n  //     e.preventDefault();\n  //     let navLocation = () => {\n  //       return new Promise((res, rej) => {\n  //         navigator.geolocation.getCurrentPosition(res, rej);\n  //       });\n  //     };\n  //     let latlong = await navLocation().then((res) => {\n  //       let latitude = res.coords.latitude;\n  //       let longitude = res.coords.longitude;\n  //       return [latitude, longitude];\n  //     });\n  //     // console.log(latlong)\n  //     let [lat, long] = latlong;\n  //     console.log(lat, long);\n  //     const response = await fetch(\"http://localhost:5000/api/getlocation\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify({ latlong: { lat, long } }),\n  //     });\n  //     const { location } = await response.json();\n  //     console.log(location);\n  //     setAddress(location);\n  //     setCredentials({ ...credentials, [e.target.name]: location });\n  //   };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetch(\"http://localhost:5000/api/createuser\", {\n      //       // credentials: 'include',\n      //       // Origin:\"http://localhost:3000/login\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: credentials.name,\n        email: credentials.email,\n        location: credentials.geolocation,\n        password: credentials.password,\n      }),\n    });\n    const json = await response.json();\n    console.log(json);\n    if (!json.success) {\n      alert(\"Enter Valid Credentials\");\n    }\n    // if (json.success) {\n    //save the auth toke to local storage and redirect\n    //       localStorage.setItem(\"token\", json.authToken);\n    //       navigate(\"/login\");\n    //     } else {\n    //       alert(\"Enter Valid Credentials\");\n    // }\n  };\n\n  const onChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div\n      style={{\n        backgroundImage:\n          'url(\"https://images.pexels.com/photos/1565982/pexels-photo-1565982.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\")',\n        backgroundSize: \"cover\",\n        height: \"100vh\",\n      }}\n    >\n      <div>\n        <Navbar />\n      </div>\n\n      <div className=\"container\">\n        <form\n          className=\"w-50 m-auto mt-5 border bg-dark border-success rounded\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"m-3 text-light\">\n            <label htmlFor=\"name\" className=\"form-label\">\n              Name\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"name\"\n              value={credentials.name}\n              onChange={onChange}\n              aria-describedby=\"emailHelp\"\n            />\n          </div>\n          <div className=\"m-3 text-light\">\n            <label htmlFor=\"email\" className=\"form-label\">\n              Email address\n            </label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              name=\"email\"\n              value={credentials.email}\n              onChange={onChange}\n              aria-describedby=\"emailHelp\"\n            />\n          </div>\n          <div className=\"m-3 text-light\">\n            <label htmlFor=\"address\" className=\"form-label\">\n              Address\n            </label>\n            {/* <fieldset> */}\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"geolocation\"\n              placeholder='\"Click below for fetching address\"'\n              value={credentials.geolocation}\n              onChange={onChange}\n              // onChange={(e) => setAddress(e.target.value)}\n              aria-describedby=\"emailHelp\"\n            />\n            {/* </fieldset> */}\n          </div>\n          {/* <div className=\"m-3\">\n            <button\n              type=\"button\"\n              // onClick={handleClick}\n              name=\"geolocation\"\n              className=\" btn btn-success\"\n            >\n              Click for current Location{\" \"}\n            </button>\n          </div> */}\n          <div className=\"m-3 text-light\">\n            <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              value={credentials.password}\n              onChange={onChange}\n              name=\"password\"\n            />\n          </div>\n          <button type=\"submit\" className=\"m-3 btn btn-success text-light\">\n            Submit\n          </button>\n          <Link to=\"/login\" className=\"m-3 mx-1 btn btn-danger text-light\">\n            Already a user\n          </Link>\n        </form>\n      </div>\n    </div>\n  );\n}\n","E:\\foodie-master\\foodie-master\\foodie-master\\src\\screens\\Home.js",[],[],"E:\\foodie-master\\foodie-master\\foodie-master\\src\\components\\Navbar.js",[],[],"E:\\foodie-master\\foodie-master\\foodie-master\\src\\components\\Footer.js",[],[],"E:\\foodie-master\\foodie-master\\foodie-master\\src\\components\\Card.js",[],[],"E:\\foodie-master\\foodie-master\\foodie-master\\src\\Model.js",[],[],"E:\\foodie-master\\foodie-master\\foodie-master\\src\\screens\\Cart.js",[],[],{"ruleId":"69","severity":1,"message":"70","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":21},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar"]